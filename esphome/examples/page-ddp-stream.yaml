# =========================================
# DDP Stream Page (LVGL, ESP-IDF only)
# Tested with ESPHome 2025.8
# =========================================

substitutions:
  WS_HOST: "192.168.1.200"
  WS_PORT: "8788"
  DDP_PORT: "4048"

  CANVAS_WIDTH: "64"
  CANVAS_HEIGHT: "64"
  OUT_ID: "1"
  VIDEO_SRC: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"   # or "mario.gif" or https://... / file:///sd/... etc.

external_components:
  - source: github://stuartparmenter/lvgl-ddp-stream@v0.1.0
    components: [ddp_stream, ws_ddp_control]

# -----------------------------
# DDP receiver + canvas binding
# -----------------------------
ddp_stream:
  id: ddp
  port: ${DDP_PORT}
  streams:
    - id: ${OUT_ID}
      canvas_id: "canvas64"
      width: ${CANVAS_WIDTH}
      height: ${CANVAS_HEIGHT}

# -----------------------------
# WebSocket control
# -----------------------------
ws_ddp_control:
  - id: ws
    ws_host: ${WS_HOST}
    ws_port: ${WS_PORT}
    width: ${CANVAS_WIDTH}
    height: ${CANVAS_HEIGHT}
    out: ${OUT_ID}
    src: ${VIDEO_SRC}
    # Optional parameters:
    # pace: <int>         # e.g. 30 (frames/sec). 0 disables pacing
    # ema: <float>        # 0.0â€“1.0, smoothing factor for low-FPS sources
    # expand: auto        # values: 0|never, 1|auto, 2|force
    # loop: true          # true|false, repeat source
    # ddp_port: 4048      # UDP port for DDP packets
    # hw: auto            # auto|none|cuda|qsv|vaapi|videotoolbox|d3d11va (server-specific)

globals:
  - id: ddp_page_active
    type: bool
    restore_value: no
    initial_value: 'false'

# -----------------------------
# LVGL page with a single canvas
# -----------------------------
lvgl:
  pages:
    - id: ddp_video
      widgets:
        - canvas:
            id: canvas64
            width: ${CANVAS_WIDTH}
            height: ${CANVAS_HEIGHT}
      on_load:
        then:
          - lambda: |-
              id(ddp_page_active) = true;
              id(ws).start();
      on_unload:
        then:
          - lambda: |-
              id(ddp_page_active) = false;
              id(ws).stop();

# -----------------------------
# Runtime source change
# -----------------------------
text:
  - platform: template
    id: video_src_ctl
    name: "DDP Video Source"
    optimistic: true
    initial_value: ${VIDEO_SRC}
    mode: text
    on_value:
      then:
        - lambda: |-
            id(ws).set_src(x.c_str());
            // Only restart if page is visible
            if (id(ddp_page_active)) {
              id(ws).request_restart();
            }
