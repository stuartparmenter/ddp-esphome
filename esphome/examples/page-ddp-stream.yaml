# Â© Copyright 2025 Stuart Parmenter
# SPDX-License-Identifier: MIT

# =========================================
# DDP Stream Page (LVGL, ESP-IDF only)
# Tested with ESPHome 2025.8
# =========================================

substitutions:
  WS_DDP_HOST: "192.168.1.200"
  WS_DDP_PORT: "8788"
  DDP_PORT: "4048"
  DEFAULT_VIDEO_SRC: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"   # or "mario.gif" or https://... / file:///sd/... etc.
  CANVAS_WIDTH: "64"
  CANVAS_HEIGHT: "64"
  OUT_ID: "1"

external_components:
  - source: github://stuartparmenter/lvgl-ddp-stream@main  # Use @v0.4.2 or specific version for production
    components: [ddp_stream, ws_ddp_control]

# UDP DDP sink + canvas bindings (no w/h required here)
ddp_stream:
  id: ddp
  port: ${DDP_PORT}
  streams:
    - id: ${OUT_ID}
      canvas_id: "canvas64"
    # - id: 2
    #   canvas_id: "canvas32"

# -----------------------------
# WebSocket control
# -----------------------------
ws_ddp_control:
  id: ws
  ws_host: ${WS_DDP_HOST}
  ws_port: ${WS_DDP_PORT}
  device_id: "esp32-ddp"        # Optional device identifier
  ddp: ddp
  outputs:
    - id: 1
      src: ${DEFAULT_VIDEO_SRC}
      # width/height optional; if omitted, auto from canvas
      # width: 64
      # height: 64
      # format: rgb888          # Optional: rgb888, rgb565, rgb565le, rgb565be
      # pace: 0
      # ema: 0.0
      # expand: auto
      # loop: true
      # hw: auto
    # - id: 2
    #   src: ${VIDEO_SRC_2}

# -----------------------------
# LVGL page with a single canvas
# -----------------------------
lvgl:
  pages:
    - id: ddp_video
      widgets:
        - canvas:
            id: canvas64
            width: ${CANVAS_WIDTH}
            height: ${CANVAS_HEIGHT}
      on_load:
        then:
          - lambda: |-
              id(ws).connect();
              id(ws).start(${OUT_ID});
      on_unload:
        then:
          - lambda: |-
              id(ws).stop(${OUT_ID});
              id(ws).disconnect();

# -----------------------------
# Runtime source change
# -----------------------------
text:
  - platform: template
    id: video_src_ctl
    name: "DDP Video Source"
    optimistic: true
    initial_value: ${DEFAULT_VIDEO_SRC}
    mode: text
    on_value:
      then:
        - ws_ddp_control.set_src:
            id: ws
            output_id: ${OUT_ID}
            src: !lambda "return x;"

